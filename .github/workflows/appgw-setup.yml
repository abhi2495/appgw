name: "Setup APP Gateway"

on:
  workflow_dispatch:
    inputs:
      env:
        type: environment
        description: 'Name of the environment in which app gateway needs to be setup'
        required: true

jobs:
  create-app-gateway:
    runs-on: ubuntu-latest
    environment: 
      name: "${{ github.event.inputs.env }}"
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Storing Azure Credentials as Env variables
        run: | 
          echo "ARM_CLIENT_ID=$(echo '${{ secrets.AZURE_CREDENTIALS }}' | jq -r '.clientId')" >> $GITHUB_ENV
          echo "ARM_CLIENT_SECRET=$(echo '${{ secrets.AZURE_CREDENTIALS }}' | jq -r '.clientSecret')" >> $GITHUB_ENV
          echo "ARM_SUBSCRIPTION_ID=$(echo '${{ secrets.AZURE_CREDENTIALS }}' | jq -r '.subscriptionId')" >> $GITHUB_ENV
          echo "ARM_TENANT_ID=$(echo '${{ secrets.AZURE_CREDENTIALS }}' | jq -r '.tenantId')" >> $GITHUB_ENV

      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Load environment variables
        uses: dcarbone/yaml-to-env-action@v1.0.0
        with:
          debug: '${{ inputs.debug }}'
          yaml-file: './config/${{ github.event.inputs.env }}.yml'
          yq-version: '4.27.5'

      - name: Install Terraform
        uses: autero1/action-terraform@v1.1.1
        with:
          terraform_version: 1.2.8

      - name: Create Storage Account For Terraform Backend(if not exists)
        run: |
          chmod +x ./scripts/create-tf-backend-if-not-exists.sh
          ./scripts/create-tf-backend-if-not-exists.sh --resource-group ${{ env.RESOURCE_GROUP_NAME }} --location ${{ env.AZ_REGION }} \
                         --storage-account-name ${{ env.TERRAFORM_BACKEND_STORAGE_ACCOUNT_NAME }} --container-name ${{ env.TERRAFORM_BACKEND_CONTAINER_NAME }}

      - name: Initialize Terraform
        run: terraform init -input=false -backend-config="resource_group_name=${{ env.RESOURCE_GROUP_NAME }}" -backend-config="storage_account_name=${{ env.TERRAFORM_BACKEND_STORAGE_ACCOUNT_NAME }}" -backend-config="container_name=${{ env.TERRAFORM_BACKEND_CONTAINER_NAME }}"
        working-directory: scripts/${{ github.event.inputs.env }}
